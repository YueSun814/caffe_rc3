# Simple single-layer network to showcase editing model parameters.
layer {
  name: "data"
  type: "HDF5Data"
  top: "dataLP"
  top: "dataHP"
  include {
    phase: TRAIN 
  }
  hdf5_data_param {
    source: "./trainProstate_list.txt"
    batch_size: 10
    shuffle: true 
  }
#MR: 32*32*32
#CT: 24*24*24 
}
layer {
  name: "data"
  type: "HDF5Data"
  top: "dataLP"
  top: "dataHP"
  include {
    phase: TEST
  }
  hdf5_data_param {
    source: "./trainProstate_list.txt"
    batch_size: 10
    shuffle: true
  }
}
#-------------layer group 1---------------
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "dataLP"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 32
    kernel_size: 5 
    #pad: 1
    stride: 1
    engine: CAFFE
    weight_filler {
      type: "xavier"
      #std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "conv1"
  top: "conv1"
}
layer {
  name: "conv1a"
  type: "Convolution"
  bottom: "conv1"
  top: "conv1a"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 32 
    kernel_size: 3
    pad: 1
    stride: 1
    engine: CAFFE
    weight_filler {
      type: "xavier"
      #std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu1a"
  type: "ReLU" 
  bottom: "conv1a"
  top: "conv1a"
}
layer {
  name: "conv1b"
  type: "Convolution"
  bottom: "conv1a"
  top: "conv1b"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 32
    kernel_size: 3
    pad: 1
    stride: 1
    engine: CAFFE
    weight_filler {
      type: "xavier"
      #std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu1b"
  type: "ReLU"
  bottom: "conv1b"
  top: "conv1b"
}
layer {
  name: "conv1c"
  type: "Convolution"
  bottom: "conv1b"
  top: "conv1c"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 32
    kernel_size: 3
    pad: 1
    stride: 1
    engine: CAFFE
    weight_filler {
      type: "xavier"
      #std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu1c"
  type: "ReLU"
  bottom: "conv1c"
  top: "conv1c"
}
layer {
  name: "conv1d"
  type: "Convolution"
  bottom: "conv1c"
  top: "conv1d"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 32
    kernel_size: 3
    pad: 1
    stride: 1
    engine: CAFFE
    weight_filler {
      type: "xavier"
      #std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu1d"
  type: "ReLU"
  bottom: "conv1d"
  top: "conv1d"
}
#-------------layer group 2---------------
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "conv1d"
  top: "conv2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 64
    kernel_size: 5 
    #pad: 1
    stride: 1
    engine: CAFFE
    weight_filler {
      type: "xavier"
      #std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2"
}
layer {
  name: "conv2a"
  type: "Convolution"
  bottom: "conv2"
  top: "conv2a"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 64 
    kernel_size: 3
    pad: 1
    stride: 1
    engine: CAFFE
    weight_filler {
      type: "xavier"
      #std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu2a"
  type: "ReLU"
  bottom: "conv2a"
  top: "conv2a"
}
layer {
  name: "conv2b"
  type: "Convolution"
  bottom: "conv2a"
  top: "conv2b"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 32 
    kernel_size: 3
    pad: 1
    stride: 1
    engine: CAFFE
    weight_filler {
      type: "xavier"
      #std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu2b"
  type: "ReLU"
  bottom: "conv2b"
  top: "conv2b"
}
layer {
  name: "conv2c"
  type: "Convolution"
  bottom: "conv2b"
  top: "conv2c"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 32 
    kernel_size: 3
    pad: 1
    stride: 1
    engine: CAFFE
    weight_filler {
      type: "xavier"
      #std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu2c"
  type: "ReLU"
  bottom: "conv2c"
  top: "conv2c"
}
#-------------layer group 3---------------
layer {
  name: "conv3a"
  type: "Convolution"
  bottom: "conv2c"
  top: "conv3a"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 1 
    kernel_size: 3
    pad: 1
    stride: 1
    engine: CAFFE
    weight_filler {
      type: "xavier"
      #std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "loss"
  type: "EuclideanLoss"
  bottom: "conv3a"
  bottom: "dataHP"
  top: "loss"
#  loss_param {
#    ignore_label: -1
#  }
#  softmax_param {
#    axis: 1
#  }
  include: { phase: TRAIN }
}
layer {
  name: "loss"
  type: "EuclideanLoss"
  bottom: "conv3a"
  bottom: "dataHP"
  top: "loss"
#  loss_param {
#    ignore_label: -1
#  }
#  softmax_param {
#    axis: 1
#  }
  include: { phase: TEST }
}

#layer {
#  name: "frscore"
#  type: "Crop"
#  bottom: "upscore"
#  bottom: "data"
#  top: "score"
#  crop_param {
#    axis: 2
#    offset: 19
#  }
#}


